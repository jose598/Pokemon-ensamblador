.data 
bienvenido: .asciiz "Bienvenido al sistema de combates Pokémon "
poke1:  .asciiz "\nIngrese el numero del primer Pokemon para el combate: "
poke2:  .asciiz "\nIngrese el numero del segundo Pokemon para el combate: "
newLine: .ascii "\n"
#file:   .asciiz "C:\\Users\\Francisco\\Desktop\\Ensamblador\\pokeTypes.txt"      # ruta Absoluta..
file:   .asciiz "C:\\Users\\TASHZ\\Desktop\\Pokemon-ensamblador\\pokeTypes.txt" 
salto: .ascii "\n"
buffer: .space 1024

	.globl main
	.text

main:
	li $v0, 4
	la $a0, bienvenido
	syscall
	li $v0, 4
	la $a0, salto
	syscall
	jal random
	add $t3,$v0,0
	#li $v0, 1
	# syscall
	#jal lectura
	jal entrada
	 #Print int de usuario
        move $t0, $v0   #t0:poke1
        jal entrada
        move $t1, $v0   #t0:poke2
        #imprir entrada 1
        li $v0, 1
        move $a0, $t0
        syscall
        
         #imprir entrada 2
        li $v0, 1
        move $a0, $t1
        syscall
                
        
	jal end
random:
    addi $sp, $sp, -4 
    sw $ra, 0($sp)
    li $a1, 99 #setear el maximo valor
    li $v0, 42 #genera el numero random
    syscall
    move $v0, $a0
    lw $ra, 0($sp)	
    addi $sp, $sp, 4
    jr $ra	
    
lectura:
   addi $sp, $sp, -8
   sw $a0,0($sp)
   
   li $v0, 4
   la $a0, salto
   syscall
   la $a0, file
   jal read
  
   la $a0, ($v0)
   li $v0, 4
   syscall
   li $v0, 10
   syscall

read:
#Aqui lo abre
  li $v0, 13       # Aqui se abre el archivo
  li $a1, 0        # bandera
  syscall          # abre el archivo... fd en v0
  move $t1, $v0    	
  
 #Aqui lo lee
  li $v0, 14       # instruccion para leer en v0
  la $a1, buffer   # direccionamiento del buffer
  li $a2, 1024  
  add $t1,$zero,0
  add $t1,$t1,$t3   
  move $a0, $t1    # direcciona el fd en a0		
  syscall          


#Aqui lo cierra
  li $v0, 16       # intruccion para cerrar
  move $a0, $t1   # redirrecciona el fd a a0
  syscall         

  la $v0, buffer 
  
  lw $a0,0($sp)
  addi $sp, $sp, 8
  jr $ra


entrada:

	#Print mensaje
        li $v0, 4
        la $a0, poke1
        syscall

        #Obtener int de usuario
        li $v0, 5
        syscall
        jr $ra

end:
	li $v0, 10
	syscall
	
	
