.data 
<<<<<<< HEAD
text1: .asciiz "Bienvenido al sistema de combates Pokémon "
newLine: .asciiz "\n"
file:   .asciiz "C:\\Users\\Francisco\\Desktop\\Ensamblador\\pokeTypes.txt"      # ruta Absoluta..
=======
bienvenido: .asciiz "Bienvenido al sistema de combates Pokémon "
poke1:  .asciiz "\nIngrese el numero del primer Pokemon para el combate: "
poke2:  .asciiz "\nIngrese el numero del segundo Pokemon para el combate: "
newLine: .ascii "\n"
#file:   .asciiz "C:\\Users\\Francisco\\Desktop\\Ensamblador\\pokeTypes.txt"      # ruta Absoluta..
file:   .asciiz "C:\\Users\\TASHZ\\Desktop\\Pokemon-ensamblador\\pokeTypes.txt" 
salto: .ascii "\n"
>>>>>>> d711db2998afa72a5c0d10f85f69d53ec0a100f1
buffer: .space 1024

	.globl main
	.text

main:
	li $v0, 4
	la $a0, bienvenido
	syscall
	li $v0, 4
	la $a0, newLine
	syscall
<<<<<<< HEAD
	jal lectura
	la $a0, ($v0)
  	li $v0, 4
=======
	jal random
	add $t3,$v0,0
	#li $v0, 1
	#syscall
	
        
        #ingresos
	jal entrada
        move $t0, $v0   #t0:npoke1
        move $t1, $t0	#mueve las entradas a t3 para validar la opcion de salida
        jal salida 
        #imprir entrada 1(temporal)
 	li $v0, 1
        move $a0, $t0
        syscall
        
        jal entrada
        move $t1, $v0   #t1:npoke2
        jal salida 
        #imprir entrada 2(temporal)
        li $v0, 1
        move $a0, $t1
        syscall
       
>>>>>>> d711db2998afa72a5c0d10f85f69d53ec0a100f1
	jal end
	
    	
lectura:

  la $a0, file
  jal read
  
  la $a0, ($v0)
  li $v0, 4
  syscall
  
  li $v0, 10
  syscall

read:
#Aqui lo abre
  li $v0, 13       # Aqui se abre el archivo
  li $a1, 0        # bandera
  syscall          # abre el archivo... fd en v0

  move $t1, $v0  
  li $t6,0
  readLine:
 #Aqui lo lee
 	li $v0, 14       # instruccion para leer en v0
 	la $a1, buffer   # direccionamiento del buffer
 	li $a2, 1
 	move $a0, $t1    # direcciona el fd en a0		
 	syscall 
 #beq $t7,255,end
 #beqz $v0,end
 	         
la $a0,buffer
  lb $t7,($a0)
  beq $t7,10,salto
 # jal random 
 #  move $t5,$v0
  add $t5,$zero,3
  slt $t5,$t6,$t5
  beq $t5,0,imprimir
 #beq $t6,3,imprimir  #random
  j readLine
  
<<<<<<< HEAD
  imprimir:
  la $a0,buffer
  li $v0, 4
  syscall
  beq $t7,10,saltoLine
  j readLine
 #b saltoLine
 
salto:
	beq $t6,7,end
	addi $t6,$t6,1
 j readLine
 
saltoLine:
	li $v0, 4
	la $a0, newLine
=======
  lw $a0,0($sp)
  addi $sp, $sp, 8
  jr $ra


entrada:

	#Print mensaje
        li $v0, 4
        la $a0, poke1
        syscall

        #Obtener int de usuario
        li $v0, 5
        syscall
        jr $ra
salida:
        addi $sp, $sp, -8
    	sw $t1,4($sp)
    	sw $t0,0($sp)
    	#---------------
	addi $t0,$zero,11
	slt $t0,$t1,$t0
	beq $t0, 0,exit
	#---------------
	lw $t0,0($sp)
	lw $t1,4($sp)
        addi $sp, $sp, 8
	jr $ra
	exit:  jal end
end:
	li $v0, 10
>>>>>>> d711db2998afa72a5c0d10f85f69d53ec0a100f1
	syscall
	 beq $t6,7,end
 	j readLine
	
  #jr $ra

  
random:
    addi $sp, $sp, -4 
    sw $ra, 0($sp)
    li $a1, 99 #setear el maximo valor
    li $v0, 42 #genera el numero random
    syscall
    move $v0, $a0
    lw $ra, 0($sp)	
    addi $sp, $sp, 4
    jr $ra

 end:
 	li $v0,10
 	syscall 
